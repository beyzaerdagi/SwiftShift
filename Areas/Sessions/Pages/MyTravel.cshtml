@page
@using Bitirme.Areas.Sessions.Pages
@model MyTravelModel
@{
    ViewData["Title"] = "Profile";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" integrity="sha512-8HUsf4PLvM2dXu4Zg2K2KDEDODSYNIVg7cbvFb8ZD1hW0VOrKu4tpPzX8Bm9JU4Se+PeyUemAo5usI2VZrMpxg==" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Bitirme.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" integrity="sha512-8HUsf4PLvM2dXu4Zg2K2KDEDODSYNIVg7cbvFb8ZD1hW0VOrKu4tpPzX8Bm9JU4Se+PeyUemAo5usI2VZrMpxg==" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>
    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/sweetalert2@7.12.15/dist/sweetalert2.min.css'></link>
    <style>

        .modalcard {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            max-width: 300px;
            margin: auto;
            text-align: center;
            padding-bottom: 10px;
        }

        .btn-get-contact {
            text-align: center;
            background-color: #4caf50;
            color: white;
            padding: 6px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .card-body {
            padding: 10px;
        }

        button {
            background-color: #4CAF50;
            border-radius: 20px;
            color: #ffffff;
            font-size: 16px;
            padding: 5px 7px;
            cursor: pointer;
            border: none;
            transition: background-color 0.3s;
        }

            button:hover {
                background-color: honeydew;
            }

        .card-footer {
            background-color: #4CAF50;
        }

        .animated-card {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 50px;
            font-family: 'Roboto', sans-serif;
        }

        .card {
            width: 24rem;
            height: 36rem;
            border-radius: 10px;
            overflow: hidden;
            cursor: pointer;
            position: relative;
            color: $color-primary-white;
            box-shadow: 0 10px 30px 5px rgba(0, 0, 0, 0.2);
            img

        {
            position: absolute;
            object-fit: cover;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            opacity: 0.9;
            transition: opacity .2s ease-out;
        }

        h2 {
            position: absolute;
            inset: auto auto 30px 30px;
            margin: 0;
            transition: inset .3s .3s ease-out;
            font-family: 'Roboto Condensed', sans-serif;
            font-weight: normal;
            text-transform: uppercase;
        }

        p, .prdctEdit {
            position: absolute;
            opacity: 0;
            max-width: 80%;
            transition: opacity .3s ease-out;
        }

        p {
            inset: auto auto 80px 30px;
        }

        .prdctEdit {
            inset: auto auto 40px 250px;
            color: inherit;
            text-decoration: none;
        }

        .prdctDel {
            position: absolute;
            opacity: 0;
            max-width: 80%;
            inset: auto auto 40px 325px; /* Düğmeyi sağ alt köşeye yaslar */
            color: inherit;
            text-decoration: none;
            transition: opacity .3s ease-out;
        }

        &:hover h2 {
            inset: auto auto 360px 30px;
            transition: inset .3s ease-out;
        }

        &:hover p, &:hover .prdctEdit, &:hover .prdctDel {
            opacity: 1;
            transition: opacity .5s .1s ease-in;
        }

        &:hover img {
            transition: opacity .3s ease-in;
            opacity: 0.5;
        }

        .animated-card {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 50px;
            font-family: 'Roboto', sans-serif;
        }

        .card {
            width: 24rem;
            height: 36rem;
            border-radius: 10px;
            overflow: hidden;
            cursor: pointer;
            position: relative;
            color: $color-primary-white;
            box-shadow: 0 10px 30px 5px rgba(0, 0, 0, 0.2);
            img

        {
            position: absolute;
            object-fit: cover;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            opacity: 0.9;
            transition: opacity .2s ease-out;
        }

        h2 {
            position: absolute;
            inset: auto auto 30px 30px;
            margin: 0;
            transition: inset .3s .3s ease-out;
            font-family: 'Roboto Condensed', sans-serif;
            font-weight: normal;
            text-transform: uppercase;
        }

        p {
            inset: auto auto 80px 30px;
        }

        .button-container {
            display: flex;
            flex-direction: column; /* Düğmeleri dikey olarak sıralar */
            align-items: flex-end; /* Sağa yaslar */
        }

        &:hover h2 {
            inset: auto auto 360px 30px;
            transition: inset .3s ease-out;
        }

        &:hover p, &:hover .prdctEdit {
            opacity: 1;
            transition: opacity .5s .1s ease-in;
        }

        &:hover img {
            transition: opacity .3s ease-in;
            opacity: 0.5;
        }
    </style>

    @section scripts {
        <script type="text/javascript">

            var selectedDepartureCountryId;
            var selectedArrivalCountryId;
            var selectedDepartureCityId;
            var selectedArrivalCityId;

            function updateCheckboxStatus(travel)
            {
                var seeProductCheckbox = $('#checkSeeProduct');
                var carrySensitiveCheckbox = $('#checkCarrySensitive');

                if (travel.seeProduct === 1)
                {
                    seeProductCheckbox.prop('checked', true);
                } else
                {
                    seeProductCheckbox.prop('checked', false);
                }

                if (travel.carrySensitiveProduct === 1)
                {
                    carrySensitiveCheckbox.prop('checked', true);
                }
                else
                {
                    carrySensitiveCheckbox.prop('checked', false);
                }
            }

            function formatDate(dateString)
            {
                var date = new Date(dateString);
                var day = date.getDate().toString().padStart(2, '0');
                var month = (date.getMonth() + 1).toString().padStart(2, '0');
                var year = date.getFullYear();
                return day + '/' + month + '/' + year;
            }

            function Modal_Kapat()
            {
                $('#ModalTravel').modal('hide');
            }

            function populateCities(selectedCountryId, dropDownId)
            {
                $.ajax({
                    type: 'GET',
                    url: '/Sessions/MyTravel?handler=Cities',
                    data: { countryId: selectedCountryId },
                    success: function (cities)
                    {
                        debugger;
                        var cityDropdown = $(dropDownId);
                        $.each(cities, function (i, city)
                        {
                            cityDropdown.append($("<option></option>").val(this['value']).html(this['text']));
                        });
                    },
                    error: function ()
                    {
                        console.error('Error fetching cities');
                    }
                });
            }

            function populateDistrict(selectedCityId, dropDownId)
            {
                $.ajax({
                    type: 'GET',
                    url: '/Sessions/MyTravel?handler=District',
                    data: { cityId: selectedCityId },
                    success: function (cities)
                    {
                        var districtDropdown = $(dropDownId);
                        $.each(cities, function (i, district)
                        {
                            districtDropdown.append($("<option></option>").val(this['value']).html(this['text']));
                        });
                    },
                    error: function ()
                    {
                        console.error('Error fetching cities');
                    }
                });
            }

            function Modal_Guncelle()
            {
                var departureDateStr = $('#departureDate').val();
                var arrivalDateStr = $('#arrivalDate').val();

                var departureParts = departureDateStr.split("/");
                var arrivalParts = arrivalDateStr.split("/");

                var departureDay = parseInt(departureParts[0]);
                var departureMonth = parseInt(departureParts[1]);
                var departureYear = parseInt(departureParts[2]);

                var arrivalDay = parseInt(arrivalParts[0]);
                var arrivalMonth = parseInt(arrivalParts[1]);
                var arrivalYear = parseInt(arrivalParts[2]);

                var departureDate = new Date(departureYear, departureMonth - 1, departureDay);
                var arrivalDate = new Date(arrivalYear, arrivalMonth - 1, arrivalDay);

                if (departureDate > arrivalDate)
                {
                    swal("Hata!", "Kalkış Tarihi, Varış Tarihinden Büyük Olamaz!", "error", {
                        button: "Tamam",
                        timer: 5000
                    });
                    return;
                }

                var seeProductValue = $('#checkSeeProduct').is(':checked') ? 1 : 0;
                var carrySensitiveValue = $('#checkCarrySensitive').is(':checked') ? 1 : 0;

                var formData = {
                    travelId: $('#travelId').text(),
                    departureCountryId: selectedDepartureCountryId,
                    departureCityId: selectedDepartureCityId,
                    departureDistrictId: $('#ddlDepartureDistrict').val(),
                    arrivalCountryId: selectedArrivalCountryId,
                    arrivalCityId: selectedArrivalCityId,
                    arrivalDistrictId: $('#ddlArrivalDistrict').val(),
                    departureDate: departureDateStr,
                    arrivalDate: arrivalDateStr,
                    maxWeightCarry: $('#maxWeightCarry').val(),
                    pricePerKg: $('#pricePerKg').val(),
                    seeProduct: seeProductValue,
                    carrySensitiveProduct: carrySensitiveValue
                };

                $.ajax({
                    type: 'POST',
                    url: '/Sessions/MyTravel?handler=UpdateTravel',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(formData),
                    dataType: "json",
                    headers: {
                        "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response)
                    {
                        swal({
                            title: "İşlem Başarılı",
                            text: "Güncelleme İşlemi Başarıyla Gerçekleştirildi.",
                            icon: "success",
                            button: true
                        }).then(function ()
                        {
                            location.reload(true);
                            Modal_Kapat();
                        });
                    },
                    error: function (xhr, status, error)
                    {
                        console.error('Error updating data:', error);
                    }
                });
            }


            $(function ()
            {
                flatpickr(".datepicker", {
                    dateFormat: "d/m/Y",
                    minDate: "today"
                });

                $('.prdctDel').on('click', function ()
                {
                    debugger;
                    $.ajax({
                        type: 'POST',
                        url: '/Sessions/MyTravel?handler=DeleteTravel',
                        contentType: 'application/x-www-form-urlencoded',
                        data: { "id": $(this).data('id') },
                        dataType: "json",
                        headers:
                        {
                            "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response)
                        {
                            swal({
                                title: "Silme",
                                text: "Seyahat Başarılı Bir Şekilde Silinmiştir!",
                                icon: "success",
                                button: true
                            }).then(function ()
                            {
                                location.reload(true);
                            });
                            Modal_Kapat();
                        },
                        error: function (xhr, status, error)
                        {
                            console.error('Error updating data:', error);
                        }
                    });
                });

                $('.prdctEdit').on('click', function ()
                {
                    $.ajax({
                        type: "GET",
                        url: "/Sessions/MyTravel?handler=AjaxMethod",
                        data: { "id": $(this).data('id') },
                        contentType: 'application/x-www-form-urlencoded',
                        dataType: "json",
                        headers:
                        {
                            "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (travel)
                        {
                            $('#travelId').text(travel.travelId);
                            $('#departureDate').val(formatDate(travel.departureDate));
                            $('#arrivalDate').val(formatDate(travel.arrivalDate));
                            $('#maxWeightCarry').val(travel.maxWeightCarry);
                            $('#pricePerKg').val(travel.pricePerKg);

                            var departureCountryDropdown = $('#ddlDepartureCountries');
                            departureCountryDropdown.empty();
                            selectedDepartureCountryId = travel.departureCountryId;
                            departureCountryDropdown.append($('<option>').val(selectedDepartureCountryId).text(travel.departureCountry.countryName).attr('selected', 'selected'));

                            var departureCityDropdown = $('#ddlDepartureCities');
                            departureCityDropdown.empty();
                            selectedDepartureCityId = travel.departureCityId;
                            departureCityDropdown.append($('<option>').val(selectedDepartureCityId).text(travel.departureCity.cityName).attr('selected', 'selected'));

                            var departureDistrictDropdown = $('#ddlDepartureDistrict');
                            departureDistrictDropdown.empty();
                            var selectedDepartureDistrictId = travel.departureDistrictId;
                            departureDistrictDropdown.append($('<option>').val(selectedDepartureDistrictId).text(travel.departureDistrict.districtName).attr('selected', 'selected'));

                            var arrivalCountryDropdown = $('#ddlArrivalCountries');
                            arrivalCountryDropdown.empty();
                            selectedArrivalCountryId = travel.arrivalCountryId;
                            arrivalCountryDropdown.append($('<option>').val(selectedArrivalCountryId).text(travel.arrivalCountry.countryName).attr('selected', 'selected'));

                            var arrivalCityDropdown = $('#ddlArrivalCities');
                            arrivalCityDropdown.empty();
                            selectedArrivalCityId = travel.arrivalCityId;
                            arrivalCityDropdown.append($('<option>').val(selectedArrivalCityId).text(travel.arrivalCity.cityName).attr('selected', 'selected'));

                            var arrivalDistrictDropdown = $('#ddlArrivalDistrict');
                            arrivalDistrictDropdown.empty();
                            var selectedArrivalDistrictId = travel.arrivalDistrictId;
                            arrivalDistrictDropdown.append($('<option>').val(selectedArrivalDistrictId).text(travel.arrivalDistrict.districtName).attr('selected', 'selected'));
                            
                            updateCheckboxStatus(travel);

                            $('#ModalTravel').modal('show');
                        },
                        error: function ()
                        {
                            console.error('Error fetching data');
                        }
                    });
                });

                $('#ddlDepartureCities').on('click', function ()
                {
                    populateCities(selectedDepartureCountryId, '#ddlDepartureCities');
                    selectedDepartureCityId = $(this).val();
                    var districtDropdown = $('#ddlDepartureDistrict');
                    districtDropdown.empty().append('<option selected="selected" value="0">Seçiniz</option>');
                });

                $('#ddlArrivalCities').on('click', function ()
                {
                    populateCities(selectedArrivalCountryId, '#ddlArrivalCities');
                    selectedArrivalCityId = $(this).val();
                    var districtDropdown = $('#ddlArrivalDistrict');
                    districtDropdown.empty().append('<option selected="selected" value="0">Seçiniz</option>');
                });

                $('#ddlDepartureDistrict').on('click', function ()
                {
                    populateDistrict(selectedDepartureCityId, '#ddlDepartureDistrict')
                });

                $('#ddlArrivalDistrict').on('click', function ()
                {
                    populateDistrict(selectedArrivalCityId, '#ddlArrivalDistrict')
                });
            });

            $(document).ready(function ()
            {
                debugger;
                if (@Model.UserTravels.Count == 0)
                {
                    swal({
                        title: "Uyarı!",
                        text: "Seyahatiniz Bulunmamaktadır!",
                        icon: "warning",
                        button: "Seyahat Ekle"
                    }).then(function ()
                    {
                        window.location = "/Travel/AddTravel";
                    });
                }
            });
        </script>
    }
</head>
<body>
    <header class="w3-display-container w3-wide">
        <div class="container">
            <div class="row">
                @if (Model.UserTravels.Count != 0)
                {
                    @foreach (var travel in Model.UserTravels)
                    {
                        <div class="animated-card col-md-4">
                            <div class="card">
                                <img src="~/images/travel.jpg" alt="Travel Image" />
                                <h2>
                                    SEYAHAT DETAYLARI
                                </h2>
                                <p class="card-text">
                                    <strong>Kalkış Yeri:</strong> @travel.DepartureDistrict.DistrictName / @travel.DepartureCity.CityName / @travel.DepartureCountry.CountryName <br />
                                    <strong>Gideceği Yer:</strong> @travel.ArrivalDistrict.DistrictName / @travel.ArrivalCity.CityName / @travel.ArrivalCountry.CountryName <br />
                                    <strong>Kalkış Tarihi:</strong> @travel.DepartureDate <br />
                                    <strong>Varış Tarihi:</strong> @travel.ArrivalDate <br />
                                    <strong>Taşınabilecek Maximum Kilogram:</strong> @travel.MaxWeightCarry <br />
                                    <strong>Kilogram Başına Belirlenen Ücret:</strong> @travel.pricePerKg <br />
                                    <strong>Ürünü Görmek İstiyorum: </strong> <input type="checkbox" @(travel.seeProduct == 1 ? "checked" : "") disabled /> <br />
                                    <strong>Hassas Ürün Taşır: </strong> <input type="checkbox" @(travel.carrySensitiveProduct == 1 ? "checked" : "") disabled />
                                </p>
                                <div class="button-container">
                                    @if (travel.isActiveCarrier == 0)
                                    {
                                        <button class="prdctEdit" type="button" data-id="@travel.TravelId">Düzenle</button>
                                        <button class="prdctDel" type="button" data-id="@travel.TravelId">Sil</button>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

    </header>
    <div class="modal fade" id="ModalTravel" tabindex="-1" aria-labelledby="ModalTravelLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col">
                                <span class="modal-title lead"><strong>Seyahat</strong></span>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <span hidden id="travelId"></span>
                    <div>
                        @Html.AntiForgeryToken()
                        <label class="fw-bold">Kalkış Ülkesi:</label>
                        <br />
                        <select id="ddlDepartureCountries" class="form-control">
                        </select>
                    </div>
                    <div>
                        <label class="fw-bold">Kalkış Şehri:</label>
                        <br />
                        <select id="ddlDepartureCities" class="form-control">
                        </select>
                    </div>
                    <div>
                        <label class="fw-bold">Kalkış İlçesi:</label>
                        <br />
                        <select id="ddlDepartureDistrict" class="form-control">
                        </select>
                    </div>
                    <div>
                        <label class="fw-bold">Varış Ülkesi:</label>
                        <br />
                        <select id="ddlArrivalCountries" class="form-control">
                        </select>
                    </div>
                    <div>
                        <label class="fw-bold">Varış Şehri:</label>
                        <br />
                        <select id="ddlArrivalCities" class="form-control">
                        </select>
                    </div>
                    <div>
                        <label class="fw-bold">Varış İlçesi:</label>
                        <br />
                        <select id="ddlArrivalDistrict" class="form-control">
                        </select>
                    </div>
                    <div>
                        <label class="fw-bold">Kalkış Tarihi:</label>
                        <br />
                        <input type="text" id="departureDate" class="datepicker form-control">
                    </div>
                    <div>
                        <label class="fw-bold">Varış Tarihi:</label>
                        <br />
                        <input type="text" id="arrivalDate" class="datepicker form-control">
                    </div>
                    <div>
                        <label class="fw-bold">Taşınabilecek Maximum Kilogram:</label>
                        <br />
                        <input type="number" id="maxWeightCarry" class="form-control">
                    </div>
                    <div>
                        <label class="fw-bold">Kilogram Başına Belirlenen Ücret:</label>
                        <br />
                        <input type="number" id="pricePerKg" class="form-control">
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="checkSeeProduct">
                        <label class="form-check-label" for="checkSeeProduct">
                            Ürünü Görmek İstiyorum
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="checkCarrySensitive">
                        <label class="form-check-label" for="checkCarrySensitive">
                            Hassas Ürün Taşır
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="container-fluid">
                        <div class="row d-flex justify-content-end">
                            <div class="col-auto">
                                <input type="button" class="px-4 btn btn-sm btn-warning" onclick="Modal_Guncelle()" value="Güncelle" />
                                <input type="button" class="px-4 btn btn-sm btn-danger" onclick="Modal_Kapat()" value="Kapat" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</body>
</html>
